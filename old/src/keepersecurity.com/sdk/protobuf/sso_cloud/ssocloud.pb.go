// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.10.1
// source: ssocloud.proto

//
// Protocol Buffers used in the Cloud SSO module.
//
// Mike Hewett   March 2020
// Last updated: 19-Mar-2020  Added repeats where useful
//               10-Apr-2020  Changed ..LogSAML to ..SAMLLog

package sso_cloud

import (
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	authentication "keepersecurity.com/sdk/protobuf/authentication"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//* Authentication protocols we support.
type AuthProtocolType int32

const (
	AuthProtocolType_SAML2 AuthProtocolType = 0 // We will support more authentication protocols later
)

// Enum value maps for AuthProtocolType.
var (
	AuthProtocolType_name = map[int32]string{
		0: "SAML2",
	}
	AuthProtocolType_value = map[string]int32{
		"SAML2": 0,
	}
)

func (x AuthProtocolType) Enum() *AuthProtocolType {
	p := new(AuthProtocolType)
	*p = x
	return p
}

func (x AuthProtocolType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AuthProtocolType) Descriptor() protoreflect.EnumDescriptor {
	return file_ssocloud_proto_enumTypes[0].Descriptor()
}

func (AuthProtocolType) Type() protoreflect.EnumType {
	return &file_ssocloud_proto_enumTypes[0]
}

func (x AuthProtocolType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AuthProtocolType.Descriptor instead.
func (AuthProtocolType) EnumDescriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{0}
}

//* Datatypes of SsoCloudSettings
type DataType int32

const (
	DataType_ANY                                                DataType = 0
	DataType_BOOLEAN                                            DataType = 1
	DataType_INTEGER                                            DataType = 2
	DataType_STRING                                             DataType = 3
	DataType_BYTES                                              DataType = 4
	DataType_URL                                                DataType = 5
	DataType_com_keepersecurity_proto_SsoCloud_DataType         DataType = 6
	DataType_com_keepersecurity_proto_SsoCloud_AuthProtocolType DataType = 7
	DataType_com_keepersecurity_proto_SsoCloud_SsoIdpType       DataType = 8
)

// Enum value maps for DataType.
var (
	DataType_name = map[int32]string{
		0: "ANY",
		1: "BOOLEAN",
		2: "INTEGER",
		3: "STRING",
		4: "BYTES",
		5: "URL",
		6: "com_keepersecurity_proto_SsoCloud_DataType",
		7: "com_keepersecurity_proto_SsoCloud_AuthProtocolType",
		8: "com_keepersecurity_proto_SsoCloud_SsoIdpType",
	}
	DataType_value = map[string]int32{
		"ANY":     0,
		"BOOLEAN": 1,
		"INTEGER": 2,
		"STRING":  3,
		"BYTES":   4,
		"URL":     5,
		"com_keepersecurity_proto_SsoCloud_DataType":         6,
		"com_keepersecurity_proto_SsoCloud_AuthProtocolType": 7,
		"com_keepersecurity_proto_SsoCloud_SsoIdpType":       8,
	}
)

func (x DataType) Enum() *DataType {
	p := new(DataType)
	*p = x
	return p
}

func (x DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_ssocloud_proto_enumTypes[1].Descriptor()
}

func (DataType) Type() protoreflect.EnumType {
	return &file_ssocloud_proto_enumTypes[1]
}

func (x DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataType.Descriptor instead.
func (DataType) EnumDescriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{1}
}

//* This is how the client can change a Configuration setting
type SsoCloudSettingOperationType int32

const (
	SsoCloudSettingOperationType_SET              SsoCloudSettingOperationType = 0 // Set the value of this setting
	SsoCloudSettingOperationType_GET              SsoCloudSettingOperationType = 1 // Retrieve the value of this setting
	SsoCloudSettingOperationType_DELETE           SsoCloudSettingOperationType = 2 // Removes the setting's value, essentially setting it to null.
	SsoCloudSettingOperationType_RESET_TO_DEFAULT SsoCloudSettingOperationType = 3 // Sets it to the default setting.
)

// Enum value maps for SsoCloudSettingOperationType.
var (
	SsoCloudSettingOperationType_name = map[int32]string{
		0: "SET",
		1: "GET",
		2: "DELETE",
		3: "RESET_TO_DEFAULT",
	}
	SsoCloudSettingOperationType_value = map[string]int32{
		"SET":              0,
		"GET":              1,
		"DELETE":           2,
		"RESET_TO_DEFAULT": 3,
	}
)

func (x SsoCloudSettingOperationType) Enum() *SsoCloudSettingOperationType {
	p := new(SsoCloudSettingOperationType)
	*p = x
	return p
}

func (x SsoCloudSettingOperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SsoCloudSettingOperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_ssocloud_proto_enumTypes[2].Descriptor()
}

func (SsoCloudSettingOperationType) Type() protoreflect.EnumType {
	return &file_ssocloud_proto_enumTypes[2]
}

func (x SsoCloudSettingOperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SsoCloudSettingOperationType.Descriptor instead.
func (SsoCloudSettingOperationType) EnumDescriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{2}
}

type SsoIdpType int32

const (
	SsoIdpType_XX_UNUSED SsoIdpType = 0 // The values should correspond to the entries in the DB, so we don't use element 0.
	SsoIdpType_GENERIC   SsoIdpType = 1
	SsoIdpType_F5        SsoIdpType = 2
	SsoIdpType_GOOGLE    SsoIdpType = 3
	SsoIdpType_OKTA      SsoIdpType = 4
	SsoIdpType_ADFS      SsoIdpType = 5
	SsoIdpType_AZURE     SsoIdpType = 6
	SsoIdpType_ONELOGIN  SsoIdpType = 7
	SsoIdpType_PING      SsoIdpType = 8
	SsoIdpType_JUMPCLOUD SsoIdpType = 9
)

// Enum value maps for SsoIdpType.
var (
	SsoIdpType_name = map[int32]string{
		0: "XX_UNUSED",
		1: "GENERIC",
		2: "F5",
		3: "GOOGLE",
		4: "OKTA",
		5: "ADFS",
		6: "AZURE",
		7: "ONELOGIN",
		8: "PING",
		9: "JUMPCLOUD",
	}
	SsoIdpType_value = map[string]int32{
		"XX_UNUSED": 0,
		"GENERIC":   1,
		"F5":        2,
		"GOOGLE":    3,
		"OKTA":      4,
		"ADFS":      5,
		"AZURE":     6,
		"ONELOGIN":  7,
		"PING":      8,
		"JUMPCLOUD": 9,
	}
)

func (x SsoIdpType) Enum() *SsoIdpType {
	p := new(SsoIdpType)
	*p = x
	return p
}

func (x SsoIdpType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SsoIdpType) Descriptor() protoreflect.EnumDescriptor {
	return file_ssocloud_proto_enumTypes[3].Descriptor()
}

func (SsoIdpType) Type() protoreflect.EnumType {
	return &file_ssocloud_proto_enumTypes[3]
}

func (x SsoIdpType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SsoIdpType.Descriptor instead.
func (SsoIdpType) EnumDescriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{3}
}

//* This is the value of a Configuration setting
type SsoCloudSettingValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SettingId    uint64   `protobuf:"varint,1,opt,name=settingId,proto3" json:"settingId"`    // The sso_cloud_setting_value_id
	SettingName  string   `protobuf:"bytes,2,opt,name=settingName,proto3" json:"settingName"` // A string such as sso_signing_key
	Label        string   `protobuf:"bytes,3,opt,name=label,proto3" json:"label"`             // A translated label; the name of the setting
	Value        string   `protobuf:"bytes,4,opt,name=value,proto3" json:"value"`             // The value of the setting, as a string
	ValueType    DataType `protobuf:"varint,5,opt,name=valueType,proto3,enum=SsoCloud.DataType" json:"valueType"`
	LastModified string   `protobuf:"bytes,7,opt,name=lastModified,proto3" json:"lastModified"` // Will be formatted for the Locale
	IsFromFile   bool     `protobuf:"varint,8,opt,name=isFromFile,proto3" json:"isFromFile"`
	IsEditable   bool     `protobuf:"varint,9,opt,name=isEditable,proto3" json:"isEditable"`
	IsRequired   bool     `protobuf:"varint,10,opt,name=isRequired,proto3" json:"isRequired"`
}

func (x *SsoCloudSettingValue) Reset() {
	*x = SsoCloudSettingValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsoCloudSettingValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsoCloudSettingValue) ProtoMessage() {}

func (x *SsoCloudSettingValue) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsoCloudSettingValue.ProtoReflect.Descriptor instead.
func (*SsoCloudSettingValue) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{0}
}

func (x *SsoCloudSettingValue) GetSettingId() uint64 {
	if x != nil {
		return x.SettingId
	}
	return 0
}

func (x *SsoCloudSettingValue) GetSettingName() string {
	if x != nil {
		return x.SettingName
	}
	return ""
}

func (x *SsoCloudSettingValue) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *SsoCloudSettingValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *SsoCloudSettingValue) GetValueType() DataType {
	if x != nil {
		return x.ValueType
	}
	return DataType_ANY
}

func (x *SsoCloudSettingValue) GetLastModified() string {
	if x != nil {
		return x.LastModified
	}
	return ""
}

func (x *SsoCloudSettingValue) GetIsFromFile() bool {
	if x != nil {
		return x.IsFromFile
	}
	return false
}

func (x *SsoCloudSettingValue) GetIsEditable() bool {
	if x != nil {
		return x.IsEditable
	}
	return false
}

func (x *SsoCloudSettingValue) GetIsRequired() bool {
	if x != nil {
		return x.IsRequired
	}
	return false
}

//* This performs an edit operation on a Configuration setting
type SsoCloudSettingAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SettingId   uint64                       `protobuf:"varint,1,opt,name=settingId,proto3" json:"settingId"`                                            // The sso_cloud_setting_value_id to modify.  You can use settingId or settingName to identify a value.
	SettingName string                       `protobuf:"bytes,2,opt,name=settingName,proto3" json:"settingName"`                                         // A string-based ID such as sso_signing_key that alternatively identifies the setting to change.
	Operation   SsoCloudSettingOperationType `protobuf:"varint,3,opt,name=operation,proto3,enum=SsoCloud.SsoCloudSettingOperationType" json:"operation"` // Set, Reset to Default, etc.
	Value       string                       `protobuf:"bytes,4,opt,name=value,proto3" json:"value"`                                                     // The value of the setting, as a string.
}

func (x *SsoCloudSettingAction) Reset() {
	*x = SsoCloudSettingAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsoCloudSettingAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsoCloudSettingAction) ProtoMessage() {}

func (x *SsoCloudSettingAction) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsoCloudSettingAction.ProtoReflect.Descriptor instead.
func (*SsoCloudSettingAction) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{1}
}

func (x *SsoCloudSettingAction) GetSettingId() uint64 {
	if x != nil {
		return x.SettingId
	}
	return 0
}

func (x *SsoCloudSettingAction) GetSettingName() string {
	if x != nil {
		return x.SettingName
	}
	return ""
}

func (x *SsoCloudSettingAction) GetOperation() SsoCloudSettingOperationType {
	if x != nil {
		return x.Operation
	}
	return SsoCloudSettingOperationType_SET
}

func (x *SsoCloudSettingAction) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

//* Requesting the value of or a change to an SSO Configuration
type SsoCloudConfigurationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SsoServiceProviderId  uint64                   `protobuf:"varint,1,opt,name=ssoServiceProviderId,proto3" json:"ssoServiceProviderId"`
	SsoSpConfigurationId  uint64                   `protobuf:"varint,2,opt,name=ssoSpConfigurationId,proto3" json:"ssoSpConfigurationId"`
	Name                  string                   `protobuf:"bytes,3,opt,name=name,proto3" json:"name"` // Name of the configuration
	SsoAuthProtocolType   AuthProtocolType         `protobuf:"varint,4,opt,name=ssoAuthProtocolType,proto3,enum=SsoCloud.AuthProtocolType" json:"ssoAuthProtocolType"`
	SsoCloudSettingAction []*SsoCloudSettingAction `protobuf:"bytes,5,rep,name=ssoCloudSettingAction,proto3" json:"ssoCloudSettingAction"`
}

func (x *SsoCloudConfigurationRequest) Reset() {
	*x = SsoCloudConfigurationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsoCloudConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsoCloudConfigurationRequest) ProtoMessage() {}

func (x *SsoCloudConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsoCloudConfigurationRequest.ProtoReflect.Descriptor instead.
func (*SsoCloudConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{2}
}

func (x *SsoCloudConfigurationRequest) GetSsoServiceProviderId() uint64 {
	if x != nil {
		return x.SsoServiceProviderId
	}
	return 0
}

func (x *SsoCloudConfigurationRequest) GetSsoSpConfigurationId() uint64 {
	if x != nil {
		return x.SsoSpConfigurationId
	}
	return 0
}

func (x *SsoCloudConfigurationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SsoCloudConfigurationRequest) GetSsoAuthProtocolType() AuthProtocolType {
	if x != nil {
		return x.SsoAuthProtocolType
	}
	return AuthProtocolType_SAML2
}

func (x *SsoCloudConfigurationRequest) GetSsoCloudSettingAction() []*SsoCloudSettingAction {
	if x != nil {
		return x.SsoCloudSettingAction
	}
	return nil
}

//* This is the response to an SsoConfigurationRequest
type SsoCloudConfigurationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SsoServiceProviderId uint64                  `protobuf:"varint,1,opt,name=ssoServiceProviderId,proto3" json:"ssoServiceProviderId"`
	SsoSpConfigurationId uint64                  `protobuf:"varint,2,opt,name=ssoSpConfigurationId,proto3" json:"ssoSpConfigurationId"`
	EnterpriseId         uint64                  `protobuf:"varint,3,opt,name=enterpriseId,proto3" json:"enterpriseId"`
	Name                 string                  `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`                 // Name of the configuration
	Protocol             string                  `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol"`         // For now, will always be SAML2
	LastModified         string                  `protobuf:"bytes,6,opt,name=lastModified,proto3" json:"lastModified"` // Will be formatted for the Locale
	SsoCloudSettingValue []*SsoCloudSettingValue `protobuf:"bytes,7,rep,name=ssoCloudSettingValue,proto3" json:"ssoCloudSettingValue"`
}

func (x *SsoCloudConfigurationResponse) Reset() {
	*x = SsoCloudConfigurationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsoCloudConfigurationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsoCloudConfigurationResponse) ProtoMessage() {}

func (x *SsoCloudConfigurationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsoCloudConfigurationResponse.ProtoReflect.Descriptor instead.
func (*SsoCloudConfigurationResponse) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{3}
}

func (x *SsoCloudConfigurationResponse) GetSsoServiceProviderId() uint64 {
	if x != nil {
		return x.SsoServiceProviderId
	}
	return 0
}

func (x *SsoCloudConfigurationResponse) GetSsoSpConfigurationId() uint64 {
	if x != nil {
		return x.SsoSpConfigurationId
	}
	return 0
}

func (x *SsoCloudConfigurationResponse) GetEnterpriseId() uint64 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *SsoCloudConfigurationResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SsoCloudConfigurationResponse) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *SsoCloudConfigurationResponse) GetLastModified() string {
	if x != nil {
		return x.LastModified
	}
	return ""
}

func (x *SsoCloudConfigurationResponse) GetSsoCloudSettingValue() []*SsoCloudSettingValue {
	if x != nil {
		return x.SsoCloudSettingValue
	}
	return nil
}

//* This is a request to the IdpType API.
type SsoIdpTypeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SsoIdpTypeId uint32 `protobuf:"varint,1,opt,name=ssoIdpTypeId,proto3" json:"ssoIdpTypeId"` // The caller can use the ID or the tag to identify the IdpType to operate on.
	Tag          string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag"`                    // If both are specified, the ID takes precedence
	Label        string `protobuf:"bytes,3,opt,name=label,proto3" json:"label"`                // Used when adding a new IdPType or renaming one.
}

func (x *SsoIdpTypeRequest) Reset() {
	*x = SsoIdpTypeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsoIdpTypeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsoIdpTypeRequest) ProtoMessage() {}

func (x *SsoIdpTypeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsoIdpTypeRequest.ProtoReflect.Descriptor instead.
func (*SsoIdpTypeRequest) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{4}
}

func (x *SsoIdpTypeRequest) GetSsoIdpTypeId() uint32 {
	if x != nil {
		return x.SsoIdpTypeId
	}
	return 0
}

func (x *SsoIdpTypeRequest) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *SsoIdpTypeRequest) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

//* This is a response from the IdpType API calls.
type SsoIdpTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SsoIdpTypeId int32 `protobuf:"varint,1,opt,name=ssoIdpTypeId,proto3" json:"ssoIdpTypeId"` // unique ID
	Tag          int32 `protobuf:"varint,2,opt,name=tag,proto3" json:"tag"`                   // Internal tag
	Label        int32 `protobuf:"varint,3,opt,name=label,proto3" json:"label"`               // User-friendly display name
}

func (x *SsoIdpTypeResponse) Reset() {
	*x = SsoIdpTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsoIdpTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsoIdpTypeResponse) ProtoMessage() {}

func (x *SsoIdpTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsoIdpTypeResponse.ProtoReflect.Descriptor instead.
func (*SsoIdpTypeResponse) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{5}
}

func (x *SsoIdpTypeResponse) GetSsoIdpTypeId() int32 {
	if x != nil {
		return x.SsoIdpTypeId
	}
	return 0
}

func (x *SsoIdpTypeResponse) GetTag() int32 {
	if x != nil {
		return x.Tag
	}
	return 0
}

func (x *SsoIdpTypeResponse) GetLabel() int32 {
	if x != nil {
		return x.Label
	}
	return 0
}

//* This is the request for the SAML logs of a service provider.  Used for both saml_log_get and saml_log_clear
type SsoCloudSAMLLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SsoServiceProviderId uint64 `protobuf:"varint,1,opt,name=ssoServiceProviderId,proto3" json:"ssoServiceProviderId"`
}

func (x *SsoCloudSAMLLogRequest) Reset() {
	*x = SsoCloudSAMLLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsoCloudSAMLLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsoCloudSAMLLogRequest) ProtoMessage() {}

func (x *SsoCloudSAMLLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsoCloudSAMLLogRequest.ProtoReflect.Descriptor instead.
func (*SsoCloudSAMLLogRequest) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{6}
}

func (x *SsoCloudSAMLLogRequest) GetSsoServiceProviderId() uint64 {
	if x != nil {
		return x.SsoServiceProviderId
	}
	return 0
}

//* This represents one SAML message in the log.
type SsoCloudSAMLLogEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerTime    string `protobuf:"bytes,1,opt,name=serverTime,proto3" json:"serverTime"`
	Direction     string `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction"`
	MessageType   string `protobuf:"bytes,3,opt,name=messageType,proto3" json:"messageType"`
	MessageIssued string `protobuf:"bytes,4,opt,name=messageIssued,proto3" json:"messageIssued"`
	FromEntityId  string `protobuf:"bytes,5,opt,name=fromEntityId,proto3" json:"fromEntityId"`
	SamlStatus    string `protobuf:"bytes,6,opt,name=samlStatus,proto3" json:"samlStatus"`
	RelayState    string `protobuf:"bytes,7,opt,name=relayState,proto3" json:"relayState"`
	SamlContent   string `protobuf:"bytes,8,opt,name=samlContent,proto3" json:"samlContent"`
	IsSigned      bool   `protobuf:"varint,9,opt,name=isSigned,proto3" json:"isSigned"`
	IsOK          bool   `protobuf:"varint,10,opt,name=isOK,proto3" json:"isOK"`
}

func (x *SsoCloudSAMLLogEntry) Reset() {
	*x = SsoCloudSAMLLogEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsoCloudSAMLLogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsoCloudSAMLLogEntry) ProtoMessage() {}

func (x *SsoCloudSAMLLogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsoCloudSAMLLogEntry.ProtoReflect.Descriptor instead.
func (*SsoCloudSAMLLogEntry) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{7}
}

func (x *SsoCloudSAMLLogEntry) GetServerTime() string {
	if x != nil {
		return x.ServerTime
	}
	return ""
}

func (x *SsoCloudSAMLLogEntry) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *SsoCloudSAMLLogEntry) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *SsoCloudSAMLLogEntry) GetMessageIssued() string {
	if x != nil {
		return x.MessageIssued
	}
	return ""
}

func (x *SsoCloudSAMLLogEntry) GetFromEntityId() string {
	if x != nil {
		return x.FromEntityId
	}
	return ""
}

func (x *SsoCloudSAMLLogEntry) GetSamlStatus() string {
	if x != nil {
		return x.SamlStatus
	}
	return ""
}

func (x *SsoCloudSAMLLogEntry) GetRelayState() string {
	if x != nil {
		return x.RelayState
	}
	return ""
}

func (x *SsoCloudSAMLLogEntry) GetSamlContent() string {
	if x != nil {
		return x.SamlContent
	}
	return ""
}

func (x *SsoCloudSAMLLogEntry) GetIsSigned() bool {
	if x != nil {
		return x.IsSigned
	}
	return false
}

func (x *SsoCloudSAMLLogEntry) GetIsOK() bool {
	if x != nil {
		return x.IsOK
	}
	return false
}

//* This represents an array of SAML responses from the log.
type SsoCloudSAMLLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SsoServiceProviderId uint64                  `protobuf:"varint,1,opt,name=ssoServiceProviderId,proto3" json:"ssoServiceProviderId"`
	Entry                []*SsoCloudSAMLLogEntry `protobuf:"bytes,2,rep,name=entry,proto3" json:"entry"`
}

func (x *SsoCloudSAMLLogResponse) Reset() {
	*x = SsoCloudSAMLLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsoCloudSAMLLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsoCloudSAMLLogResponse) ProtoMessage() {}

func (x *SsoCloudSAMLLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsoCloudSAMLLogResponse.ProtoReflect.Descriptor instead.
func (*SsoCloudSAMLLogResponse) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{8}
}

func (x *SsoCloudSAMLLogResponse) GetSsoServiceProviderId() uint64 {
	if x != nil {
		return x.SsoServiceProviderId
	}
	return 0
}

func (x *SsoCloudSAMLLogResponse) GetEntry() []*SsoCloudSAMLLogEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

//*
// This is a request to set the SSO Configuration for an SSO Service Provider, by ID.
// The response is an instance of SsoCloudConfigurationRequest.
type SsoCloudServiceProviderUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SsoServiceProviderId uint64 `protobuf:"varint,1,opt,name=ssoServiceProviderId,proto3" json:"ssoServiceProviderId"`
	SsoSpConfigurationId uint64 `protobuf:"varint,2,opt,name=ssoSpConfigurationId,proto3" json:"ssoSpConfigurationId"`
}

func (x *SsoCloudServiceProviderUpdateRequest) Reset() {
	*x = SsoCloudServiceProviderUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsoCloudServiceProviderUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsoCloudServiceProviderUpdateRequest) ProtoMessage() {}

func (x *SsoCloudServiceProviderUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsoCloudServiceProviderUpdateRequest.ProtoReflect.Descriptor instead.
func (*SsoCloudServiceProviderUpdateRequest) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{9}
}

func (x *SsoCloudServiceProviderUpdateRequest) GetSsoServiceProviderId() uint64 {
	if x != nil {
		return x.SsoServiceProviderId
	}
	return 0
}

func (x *SsoCloudServiceProviderUpdateRequest) GetSsoSpConfigurationId() uint64 {
	if x != nil {
		return x.SsoSpConfigurationId
	}
	return 0
}

//*
// This request is to upload the IdP metadata file as its UTF-8 byte content.
// The response is an SsoCloudConfigurationValidationResponse.
type SsoCloudIdpMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SsoSpConfigurationId uint64 `protobuf:"varint,1,opt,name=ssoSpConfigurationId,proto3" json:"ssoSpConfigurationId"`
	Filename             string `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename"`
	Content              []byte `protobuf:"bytes,3,opt,name=content,proto3" json:"content"` // UTF-8 bytes of the file content
}

func (x *SsoCloudIdpMetadataRequest) Reset() {
	*x = SsoCloudIdpMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsoCloudIdpMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsoCloudIdpMetadataRequest) ProtoMessage() {}

func (x *SsoCloudIdpMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsoCloudIdpMetadataRequest.ProtoReflect.Descriptor instead.
func (*SsoCloudIdpMetadataRequest) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{10}
}

func (x *SsoCloudIdpMetadataRequest) GetSsoSpConfigurationId() uint64 {
	if x != nil {
		return x.SsoSpConfigurationId
	}
	return 0
}

func (x *SsoCloudIdpMetadataRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *SsoCloudIdpMetadataRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

//*
// Request validation of one or more SsoCloudConfigurations.
// The response is SsoCloudConfigurationValidationResponse.
type SsoCloudConfigurationValidationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SsoSpConfigurationId []uint64 `protobuf:"varint,1,rep,packed,name=ssoSpConfigurationId,proto3" json:"ssoSpConfigurationId"`
}

func (x *SsoCloudConfigurationValidationRequest) Reset() {
	*x = SsoCloudConfigurationValidationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsoCloudConfigurationValidationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsoCloudConfigurationValidationRequest) ProtoMessage() {}

func (x *SsoCloudConfigurationValidationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsoCloudConfigurationValidationRequest.ProtoReflect.Descriptor instead.
func (*SsoCloudConfigurationValidationRequest) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{11}
}

func (x *SsoCloudConfigurationValidationRequest) GetSsoSpConfigurationId() []uint64 {
	if x != nil {
		return x.SsoSpConfigurationId
	}
	return nil
}

//*
// This is part of SsoCloudConfigurationValidationResponse.
type ValidationContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SsoSpConfigurationId uint64   `protobuf:"varint,1,opt,name=ssoSpConfigurationId,proto3" json:"ssoSpConfigurationId"`
	IsSuccessful         bool     `protobuf:"varint,2,opt,name=isSuccessful,proto3" json:"isSuccessful"`
	ErrorMessage         []string `protobuf:"bytes,3,rep,name=errorMessage,proto3" json:"errorMessage"` // will be null or empty if isSuccessful is true
}

func (x *ValidationContent) Reset() {
	*x = ValidationContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidationContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidationContent) ProtoMessage() {}

func (x *ValidationContent) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidationContent.ProtoReflect.Descriptor instead.
func (*ValidationContent) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{12}
}

func (x *ValidationContent) GetSsoSpConfigurationId() uint64 {
	if x != nil {
		return x.SsoSpConfigurationId
	}
	return 0
}

func (x *ValidationContent) GetIsSuccessful() bool {
	if x != nil {
		return x.IsSuccessful
	}
	return false
}

func (x *ValidationContent) GetErrorMessage() []string {
	if x != nil {
		return x.ErrorMessage
	}
	return nil
}

//*
// This response is sent for a configuration validation request and for a Metadata upload request.
type SsoCloudConfigurationValidationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ValidationContent []*ValidationContent `protobuf:"bytes,1,rep,name=validationContent,proto3" json:"validationContent"`
}

func (x *SsoCloudConfigurationValidationResponse) Reset() {
	*x = SsoCloudConfigurationValidationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsoCloudConfigurationValidationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsoCloudConfigurationValidationResponse) ProtoMessage() {}

func (x *SsoCloudConfigurationValidationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsoCloudConfigurationValidationResponse.ProtoReflect.Descriptor instead.
func (*SsoCloudConfigurationValidationResponse) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{13}
}

func (x *SsoCloudConfigurationValidationResponse) GetValidationContent() []*ValidationContent {
	if x != nil {
		return x.ValidationContent
	}
	return nil
}

//*
// This request is sent to retrieve the list of configurations availble to a service provider.
type SsoCloudServiceProviderConfigurationListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SsoServiceProviderId uint64 `protobuf:"varint,1,opt,name=ssoServiceProviderId,proto3" json:"ssoServiceProviderId"`
}

func (x *SsoCloudServiceProviderConfigurationListRequest) Reset() {
	*x = SsoCloudServiceProviderConfigurationListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsoCloudServiceProviderConfigurationListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsoCloudServiceProviderConfigurationListRequest) ProtoMessage() {}

func (x *SsoCloudServiceProviderConfigurationListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsoCloudServiceProviderConfigurationListRequest.ProtoReflect.Descriptor instead.
func (*SsoCloudServiceProviderConfigurationListRequest) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{14}
}

func (x *SsoCloudServiceProviderConfigurationListRequest) GetSsoServiceProviderId() uint64 {
	if x != nil {
		return x.SsoServiceProviderId
	}
	return 0
}

//*
// This represents one configuration in the list.
// If isSelected is true this configuration is the one currently being used.
type ConfigurationListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SsoSpConfigurationId uint64 `protobuf:"varint,1,opt,name=ssoSpConfigurationId,proto3" json:"ssoSpConfigurationId"`
	Name                 string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	IsSelected           bool   `protobuf:"varint,3,opt,name=isSelected,proto3" json:"isSelected"`
}

func (x *ConfigurationListItem) Reset() {
	*x = ConfigurationListItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigurationListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigurationListItem) ProtoMessage() {}

func (x *ConfigurationListItem) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigurationListItem.ProtoReflect.Descriptor instead.
func (*ConfigurationListItem) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{15}
}

func (x *ConfigurationListItem) GetSsoSpConfigurationId() uint64 {
	if x != nil {
		return x.SsoSpConfigurationId
	}
	return 0
}

func (x *ConfigurationListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigurationListItem) GetIsSelected() bool {
	if x != nil {
		return x.IsSelected
	}
	return false
}

//*
// This represents a list of Configuration entries.
type SsoCloudServiceProviderConfigurationListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfigurationItem []*ConfigurationListItem `protobuf:"bytes,1,rep,name=configurationItem,proto3" json:"configurationItem"`
}

func (x *SsoCloudServiceProviderConfigurationListResponse) Reset() {
	*x = SsoCloudServiceProviderConfigurationListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsoCloudServiceProviderConfigurationListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsoCloudServiceProviderConfigurationListResponse) ProtoMessage() {}

func (x *SsoCloudServiceProviderConfigurationListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsoCloudServiceProviderConfigurationListResponse.ProtoReflect.Descriptor instead.
func (*SsoCloudServiceProviderConfigurationListResponse) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{16}
}

func (x *SsoCloudServiceProviderConfigurationListResponse) GetConfigurationItem() []*ConfigurationListItem {
	if x != nil {
		return x.ConfigurationItem
	}
	return nil
}

//*
// For security, this structure is used to make a Cloud SSO login or logout request rather than sending the parameters in the URL or in a form.
// A typical call is: https://www.keepersecurity.com/api/rest/sso/saml/login/123456789?payload=encodedEncryptedAPIRequestContainingAnSsoCloudRequest
type SsoCloudRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageSessionUid []byte `protobuf:"bytes,1,opt,name=messageSessionUid,proto3" json:"messageSessionUid"` // Required, 16 bytes
	ClientVersion     string `protobuf:"bytes,2,opt,name=clientVersion,proto3" json:"clientVersion"`         // version id string
	Embedded          bool   `protobuf:"varint,3,opt,name=embedded,proto3" json:"embedded"`                  // If true, the login/logout result is embedded in a web page
	Json              bool   `protobuf:"varint,4,opt,name=json,proto3" json:"json"`                          // If true, the login/logout result is returned as a JSON object
	Dest              string `protobuf:"bytes,5,opt,name=dest,proto3" json:"dest"`                           // redirect to: "vault", "console", or "app.fooo", where the user is redirected to fooo:// (used for mobile)
	IdpSessionId      string `protobuf:"bytes,6,opt,name=idpSessionId,proto3" json:"idpSessionId"`           // If this value was provided in an SSO login response, send it when performing a logut request.  Otherwise unused.
	ForceLogin        bool   `protobuf:"varint,7,opt,name=forceLogin,proto3" json:"forceLogin"`              // On login, whether the user should be forced to re-enter their password even if they have an active session.
	Username          string `protobuf:"bytes,8,opt,name=username,proto3" json:"username"`                   // Only used on Logout at this time.
}

func (x *SsoCloudRequest) Reset() {
	*x = SsoCloudRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsoCloudRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsoCloudRequest) ProtoMessage() {}

func (x *SsoCloudRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsoCloudRequest.ProtoReflect.Descriptor instead.
func (*SsoCloudRequest) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{17}
}

func (x *SsoCloudRequest) GetMessageSessionUid() []byte {
	if x != nil {
		return x.MessageSessionUid
	}
	return nil
}

func (x *SsoCloudRequest) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *SsoCloudRequest) GetEmbedded() bool {
	if x != nil {
		return x.Embedded
	}
	return false
}

func (x *SsoCloudRequest) GetJson() bool {
	if x != nil {
		return x.Json
	}
	return false
}

func (x *SsoCloudRequest) GetDest() string {
	if x != nil {
		return x.Dest
	}
	return ""
}

func (x *SsoCloudRequest) GetIdpSessionId() string {
	if x != nil {
		return x.IdpSessionId
	}
	return ""
}

func (x *SsoCloudRequest) GetForceLogin() bool {
	if x != nil {
		return x.ForceLogin
	}
	return false
}

func (x *SsoCloudRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

//*
// For security, this structure is used to return values from a Cloud SSO login or logout.
// It is encrypted with the key sent along with the SsoCloudRequest.
type SsoCloudResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command               string `protobuf:"bytes,1,opt,name=command,proto3" json:"command"`                             // The value will be "sso_login" or "sso_logout"
	MessageSessionUid     []byte `protobuf:"bytes,2,opt,name=messageSessionUid,proto3" json:"messageSessionUid"`         // If available, 16 bytes.  Can not be zeros.
	Email                 string `protobuf:"bytes,3,opt,name=email,proto3" json:"email"`                                 // The user's email address
	EncryptedLoginToken   []byte `protobuf:"bytes,4,opt,name=encryptedLoginToken,proto3" json:"encryptedLoginToken"`     // Login only.  Returned from a successful login.  Send this to start_login.
	ProviderName          string `protobuf:"bytes,5,opt,name=providerName,proto3" json:"providerName"`                   // The "domain name" associated with this user.
	IdpSessionId          string `protobuf:"bytes,6,opt,name=idpSessionId,proto3" json:"idpSessionId"`                   // Some IdPs associate a sessionId with the session.  If present, remember this and send it in the SsoCloudRequest when you logout.
	EncryptedSessionToken []byte `protobuf:"bytes,7,opt,name=encryptedSessionToken,proto3" json:"encryptedSessionToken"` // If available.
	ErrorToken            string `protobuf:"bytes,8,opt,name=errorToken,proto3" json:"errorToken"`                       // If there is an error this is a stringified JSON object.  The "userInstructions" and "errorMessage" fields can be shown to the user.
}

func (x *SsoCloudResponse) Reset() {
	*x = SsoCloudResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsoCloudResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsoCloudResponse) ProtoMessage() {}

func (x *SsoCloudResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsoCloudResponse.ProtoReflect.Descriptor instead.
func (*SsoCloudResponse) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{18}
}

func (x *SsoCloudResponse) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *SsoCloudResponse) GetMessageSessionUid() []byte {
	if x != nil {
		return x.MessageSessionUid
	}
	return nil
}

func (x *SsoCloudResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SsoCloudResponse) GetEncryptedLoginToken() []byte {
	if x != nil {
		return x.EncryptedLoginToken
	}
	return nil
}

func (x *SsoCloudResponse) GetProviderName() string {
	if x != nil {
		return x.ProviderName
	}
	return ""
}

func (x *SsoCloudResponse) GetIdpSessionId() string {
	if x != nil {
		return x.IdpSessionId
	}
	return ""
}

func (x *SsoCloudResponse) GetEncryptedSessionToken() []byte {
	if x != nil {
		return x.EncryptedSessionToken
	}
	return nil
}

func (x *SsoCloudResponse) GetErrorToken() string {
	if x != nil {
		return x.ErrorToken
	}
	return ""
}

//*
// This allows the user to retrieve or clear SSO logs related to a service provider.
type SsoCloudLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SsoServiceProviderId uint64 `protobuf:"varint,1,opt,name=ssoServiceProviderId,proto3" json:"ssoServiceProviderId"` // The ID of the service provider
	ServiceName          string `protobuf:"bytes,2,opt,name=serviceName,proto3" json:"serviceName"`                    // Either the service name, such as "Cloud SSO Connect"
	ServiceId            uint32 `protobuf:"varint,3,opt,name=serviceId,proto3" json:"serviceId"`                       // Or the ID of the service, such as 1.
}

func (x *SsoCloudLogRequest) Reset() {
	*x = SsoCloudLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SsoCloudLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SsoCloudLogRequest) ProtoMessage() {}

func (x *SsoCloudLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SsoCloudLogRequest.ProtoReflect.Descriptor instead.
func (*SsoCloudLogRequest) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{19}
}

func (x *SsoCloudLogRequest) GetSsoServiceProviderId() uint64 {
	if x != nil {
		return x.SsoServiceProviderId
	}
	return 0
}

func (x *SsoCloudLogRequest) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *SsoCloudLogRequest) GetServiceId() uint32 {
	if x != nil {
		return x.ServiceId
	}
	return 0
}

//*
// This is used internally by Cloud SSO.  Clients do not use it.
type SamlRelayState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageSessionUid []byte                           `protobuf:"bytes,1,opt,name=messageSessionUid,proto3" json:"messageSessionUid"`                                        // Required, 16 bytes
	Username          string                           `protobuf:"bytes,2,opt,name=username,proto3" json:"username"`                                                          // Required for logout
	Embedded          bool                             `protobuf:"varint,3,opt,name=embedded,proto3" json:"embedded"`                                                         // If true, the login/logout result is embedded in a web page
	Json              bool                             `protobuf:"varint,4,opt,name=json,proto3" json:"json"`                                                                 // If true, the login/logout result is returned as a JSON object
	DestId            uint32                           `protobuf:"varint,5,opt,name=destId,proto3" json:"destId"`                                                             // ID of the dest: lookup from the DB on return.
	KeyId             int32                            `protobuf:"varint,6,opt,name=keyId,proto3" json:"keyId"`                                                               // Which transmission key is used
	SupportedLanguage authentication.SupportedLanguage `protobuf:"varint,7,opt,name=supportedLanguage,proto3,enum=Authentication.SupportedLanguage" json:"supportedLanguage"` // Passed in by the caller, or defaults to English
	Checksum          uint64                           `protobuf:"varint,8,opt,name=checksum,proto3" json:"checksum"`                                                         // Used to verify contents after transmission
	IsGeneratedUid    bool                             `protobuf:"varint,9,opt,name=isGeneratedUid,proto3" json:"isGeneratedUid"`                                             // Used if the messageSessionUid was generated by Keeper rather than the client
}

func (x *SamlRelayState) Reset() {
	*x = SamlRelayState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ssocloud_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SamlRelayState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SamlRelayState) ProtoMessage() {}

func (x *SamlRelayState) ProtoReflect() protoreflect.Message {
	mi := &file_ssocloud_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SamlRelayState.ProtoReflect.Descriptor instead.
func (*SamlRelayState) Descriptor() ([]byte, []int) {
	return file_ssocloud_proto_rawDescGZIP(), []int{20}
}

func (x *SamlRelayState) GetMessageSessionUid() []byte {
	if x != nil {
		return x.MessageSessionUid
	}
	return nil
}

func (x *SamlRelayState) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SamlRelayState) GetEmbedded() bool {
	if x != nil {
		return x.Embedded
	}
	return false
}

func (x *SamlRelayState) GetJson() bool {
	if x != nil {
		return x.Json
	}
	return false
}

func (x *SamlRelayState) GetDestId() uint32 {
	if x != nil {
		return x.DestId
	}
	return 0
}

func (x *SamlRelayState) GetKeyId() int32 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

func (x *SamlRelayState) GetSupportedLanguage() authentication.SupportedLanguage {
	if x != nil {
		return x.SupportedLanguage
	}
	return authentication.SupportedLanguage_ENGLISH
}

func (x *SamlRelayState) GetChecksum() uint64 {
	if x != nil {
		return x.Checksum
	}
	return 0
}

func (x *SamlRelayState) GetIsGeneratedUid() bool {
	if x != nil {
		return x.IsGeneratedUid
	}
	return false
}

var File_ssocloud_proto protoreflect.FileDescriptor

var file_ssocloud_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x73, 0x73, 0x6f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x1a, 0x10, 0x41, 0x50, 0x49, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb8, 0x02, 0x0a,
	0x14, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x30, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x72, 0x6f,
	0x6d, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46,
	0x72, 0x6f, 0x6d, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x45, 0x64, 0x69,
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x45,
	0x64, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x15, 0x53, 0x73, 0x6f, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x44, 0x0a, 0x09, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e,
	0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xbf, 0x02,
	0x0a, 0x1c, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32,
	0x0a, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x73, 0x73,
	0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x4c, 0x0a, 0x13, 0x73, 0x73,
	0x6f, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x13, 0x73, 0x73, 0x6f, 0x41, 0x75, 0x74, 0x68, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x55, 0x0a, 0x15, 0x73, 0x73, 0x6f, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x2e, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x73, 0x73, 0x6f, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xd3, 0x02, 0x0a, 0x1d, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x14, 0x73, 0x73, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x70, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x22, 0x0a,
	0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x12, 0x52, 0x0a, 0x14, 0x73, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x53, 0x73, 0x6f, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x14, 0x73, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5f, 0x0a, 0x11, 0x53, 0x73, 0x6f, 0x49, 0x64, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x73,
	0x6f, 0x49, 0x64, 0x70, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x73, 0x73, 0x6f, 0x49, 0x64, 0x70, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x60, 0x0a, 0x12, 0x53, 0x73, 0x6f, 0x49, 0x64, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x73, 0x73, 0x6f, 0x49, 0x64, 0x70, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x73, 0x73, 0x6f, 0x49, 0x64, 0x70, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74,
	0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x4c, 0x0a, 0x16, 0x53, 0x73, 0x6f, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x53, 0x41, 0x4d, 0x4c, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xd2, 0x02, 0x0a, 0x14, 0x53, 0x73, 0x6f, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x53, 0x41, 0x4d, 0x4c, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a,
	0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x73, 0x73, 0x75, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f,
	0x6d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x61, 0x6d,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x61, 0x6d, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x6c,
	0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72,
	0x65, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x61, 0x6d,
	0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x61, 0x6d, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x73, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x4f, 0x4b, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x4f, 0x4b, 0x22, 0x83, 0x01, 0x0a, 0x17,
	0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x41, 0x4d, 0x4c, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x53, 0x73, 0x6f,
	0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x41,
	0x4d, 0x4c, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x22, 0x8e, 0x01, 0x0a, 0x24, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x73,
	0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x32,
	0x0a, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x73, 0x73,
	0x6f, 0x53, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x1a, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x49,
	0x64, 0x70, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x14, 0x73, 0x73, 0x6f, 0x53, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x5c, 0x0a, 0x26, 0x53,
	0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x70, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x8f, 0x01, 0x0a, 0x11, 0x56, 0x61,
	0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12,
	0x32, 0x0a, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x14, 0x73,
	0x73, 0x6f, 0x53, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x66, 0x75, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x66, 0x75, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x74, 0x0a, 0x27, 0x53,
	0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x11, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x11,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x65, 0x0a, 0x2f, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x7f, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x14, 0x73, 0x73, 0x6f, 0x53, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69,
	0x73, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x30, 0x53, 0x73,
	0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d,
	0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x53, 0x73, 0x6f, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x89, 0x02,
	0x0a, 0x0f, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x64, 0x70,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x64, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc0, 0x02, 0x0a, 0x10, 0x53, 0x73,
	0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x30, 0x0a, 0x13,
	0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x65, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x64, 0x70, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x64, 0x70, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x15, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x88, 0x01, 0x0a,
	0x12, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x14, 0x73, 0x73, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0xcd, 0x02, 0x0a, 0x0e, 0x53, 0x61, 0x6d, 0x6c,
	0x52, 0x65, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x6a, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x73, 0x74, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x64, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x6b, 0x65, 0x79, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6b, 0x65, 0x79,
	0x49, 0x64, 0x12, 0x4f, 0x0a, 0x11, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65,
	0x52, 0x11, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12,
	0x26, 0x0a, 0x0e, 0x69, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x55, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x64, 0x55, 0x69, 0x64, 0x2a, 0x1d, 0x0a, 0x10, 0x41, 0x75, 0x74, 0x68, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x53,
	0x41, 0x4d, 0x4c, 0x32, 0x10, 0x00, 0x2a, 0xe7, 0x01, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e, 0x59, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07,
	0x42, 0x4f, 0x4f, 0x4c, 0x45, 0x41, 0x4e, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x54,
	0x45, 0x47, 0x45, 0x52, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x49, 0x4e, 0x47,
	0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x59, 0x54, 0x45, 0x53, 0x10, 0x04, 0x12, 0x07, 0x0a,
	0x03, 0x55, 0x52, 0x4c, 0x10, 0x05, 0x12, 0x2e, 0x0a, 0x2a, 0x63, 0x6f, 0x6d, 0x5f, 0x6b, 0x65,
	0x65, 0x70, 0x65, 0x72, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x44, 0x61, 0x74, 0x61,
	0x54, 0x79, 0x70, 0x65, 0x10, 0x06, 0x12, 0x36, 0x0a, 0x32, 0x63, 0x6f, 0x6d, 0x5f, 0x6b, 0x65,
	0x65, 0x70, 0x65, 0x72, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x41, 0x75, 0x74, 0x68,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x10, 0x07, 0x12, 0x30,
	0x0a, 0x2c, 0x63, 0x6f, 0x6d, 0x5f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x53, 0x73, 0x6f, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x5f, 0x53, 0x73, 0x6f, 0x49, 0x64, 0x70, 0x54, 0x79, 0x70, 0x65, 0x10, 0x08,
	0x2a, 0x52, 0x0a, 0x1c, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x07, 0x0a, 0x03, 0x53, 0x45, 0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45, 0x54,
	0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x54, 0x4f, 0x5f, 0x44, 0x45, 0x46, 0x41, 0x55,
	0x4c, 0x54, 0x10, 0x03, 0x2a, 0x82, 0x01, 0x0a, 0x0a, 0x53, 0x73, 0x6f, 0x49, 0x64, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09, 0x58, 0x58, 0x5f, 0x55, 0x4e, 0x55, 0x53, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x49, 0x43, 0x10, 0x01, 0x12,
	0x06, 0x0a, 0x02, 0x46, 0x35, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x47, 0x4f, 0x4f, 0x47, 0x4c,
	0x45, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x4b, 0x54, 0x41, 0x10, 0x04, 0x12, 0x08, 0x0a,
	0x04, 0x41, 0x44, 0x46, 0x53, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x5a, 0x55, 0x52, 0x45,
	0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x4e, 0x45, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x10, 0x07,
	0x12, 0x08, 0x0a, 0x04, 0x50, 0x49, 0x4e, 0x47, 0x10, 0x08, 0x12, 0x0d, 0x0a, 0x09, 0x4a, 0x55,
	0x4d, 0x50, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x10, 0x09, 0x42, 0x4b, 0x0a, 0x18, 0x63, 0x6f, 0x6d,
	0x2e, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x08, 0x53, 0x73, 0x6f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x5a,
	0x25, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x73, 0x6f,
	0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ssocloud_proto_rawDescOnce sync.Once
	file_ssocloud_proto_rawDescData = file_ssocloud_proto_rawDesc
)

func file_ssocloud_proto_rawDescGZIP() []byte {
	file_ssocloud_proto_rawDescOnce.Do(func() {
		file_ssocloud_proto_rawDescData = protoimpl.X.CompressGZIP(file_ssocloud_proto_rawDescData)
	})
	return file_ssocloud_proto_rawDescData
}

var file_ssocloud_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_ssocloud_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_ssocloud_proto_goTypes = []interface{}{
	(AuthProtocolType)(0),                                    // 0: SsoCloud.AuthProtocolType
	(DataType)(0),                                            // 1: SsoCloud.DataType
	(SsoCloudSettingOperationType)(0),                        // 2: SsoCloud.SsoCloudSettingOperationType
	(SsoIdpType)(0),                                          // 3: SsoCloud.SsoIdpType
	(*SsoCloudSettingValue)(nil),                             // 4: SsoCloud.SsoCloudSettingValue
	(*SsoCloudSettingAction)(nil),                            // 5: SsoCloud.SsoCloudSettingAction
	(*SsoCloudConfigurationRequest)(nil),                     // 6: SsoCloud.SsoCloudConfigurationRequest
	(*SsoCloudConfigurationResponse)(nil),                    // 7: SsoCloud.SsoCloudConfigurationResponse
	(*SsoIdpTypeRequest)(nil),                                // 8: SsoCloud.SsoIdpTypeRequest
	(*SsoIdpTypeResponse)(nil),                               // 9: SsoCloud.SsoIdpTypeResponse
	(*SsoCloudSAMLLogRequest)(nil),                           // 10: SsoCloud.SsoCloudSAMLLogRequest
	(*SsoCloudSAMLLogEntry)(nil),                             // 11: SsoCloud.SsoCloudSAMLLogEntry
	(*SsoCloudSAMLLogResponse)(nil),                          // 12: SsoCloud.SsoCloudSAMLLogResponse
	(*SsoCloudServiceProviderUpdateRequest)(nil),             // 13: SsoCloud.SsoCloudServiceProviderUpdateRequest
	(*SsoCloudIdpMetadataRequest)(nil),                       // 14: SsoCloud.SsoCloudIdpMetadataRequest
	(*SsoCloudConfigurationValidationRequest)(nil),           // 15: SsoCloud.SsoCloudConfigurationValidationRequest
	(*ValidationContent)(nil),                                // 16: SsoCloud.ValidationContent
	(*SsoCloudConfigurationValidationResponse)(nil),          // 17: SsoCloud.SsoCloudConfigurationValidationResponse
	(*SsoCloudServiceProviderConfigurationListRequest)(nil),  // 18: SsoCloud.SsoCloudServiceProviderConfigurationListRequest
	(*ConfigurationListItem)(nil),                            // 19: SsoCloud.ConfigurationListItem
	(*SsoCloudServiceProviderConfigurationListResponse)(nil), // 20: SsoCloud.SsoCloudServiceProviderConfigurationListResponse
	(*SsoCloudRequest)(nil),                                  // 21: SsoCloud.SsoCloudRequest
	(*SsoCloudResponse)(nil),                                 // 22: SsoCloud.SsoCloudResponse
	(*SsoCloudLogRequest)(nil),                               // 23: SsoCloud.SsoCloudLogRequest
	(*SamlRelayState)(nil),                                   // 24: SsoCloud.SamlRelayState
	(authentication.SupportedLanguage)(0),                    // 25: Authentication.SupportedLanguage
}
var file_ssocloud_proto_depIdxs = []int32{
	1,  // 0: SsoCloud.SsoCloudSettingValue.valueType:type_name -> SsoCloud.DataType
	2,  // 1: SsoCloud.SsoCloudSettingAction.operation:type_name -> SsoCloud.SsoCloudSettingOperationType
	0,  // 2: SsoCloud.SsoCloudConfigurationRequest.ssoAuthProtocolType:type_name -> SsoCloud.AuthProtocolType
	5,  // 3: SsoCloud.SsoCloudConfigurationRequest.ssoCloudSettingAction:type_name -> SsoCloud.SsoCloudSettingAction
	4,  // 4: SsoCloud.SsoCloudConfigurationResponse.ssoCloudSettingValue:type_name -> SsoCloud.SsoCloudSettingValue
	11, // 5: SsoCloud.SsoCloudSAMLLogResponse.entry:type_name -> SsoCloud.SsoCloudSAMLLogEntry
	16, // 6: SsoCloud.SsoCloudConfigurationValidationResponse.validationContent:type_name -> SsoCloud.ValidationContent
	19, // 7: SsoCloud.SsoCloudServiceProviderConfigurationListResponse.configurationItem:type_name -> SsoCloud.ConfigurationListItem
	25, // 8: SsoCloud.SamlRelayState.supportedLanguage:type_name -> Authentication.SupportedLanguage
	9,  // [9:9] is the sub-list for method output_type
	9,  // [9:9] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_ssocloud_proto_init() }
func file_ssocloud_proto_init() {
	if File_ssocloud_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ssocloud_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsoCloudSettingValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsoCloudSettingAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsoCloudConfigurationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsoCloudConfigurationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsoIdpTypeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsoIdpTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsoCloudSAMLLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsoCloudSAMLLogEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsoCloudSAMLLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsoCloudServiceProviderUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsoCloudIdpMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsoCloudConfigurationValidationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidationContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsoCloudConfigurationValidationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsoCloudServiceProviderConfigurationListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigurationListItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsoCloudServiceProviderConfigurationListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsoCloudRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsoCloudResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SsoCloudLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ssocloud_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SamlRelayState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ssocloud_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ssocloud_proto_goTypes,
		DependencyIndexes: file_ssocloud_proto_depIdxs,
		EnumInfos:         file_ssocloud_proto_enumTypes,
		MessageInfos:      file_ssocloud_proto_msgTypes,
	}.Build()
	File_ssocloud_proto = out.File
	file_ssocloud_proto_rawDesc = nil
	file_ssocloud_proto_goTypes = nil
	file_ssocloud_proto_depIdxs = nil
}
