// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.1
// source: breachwatch.proto

package proto_sync_down

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BreachWatchInfoType int32

const (
	BreachWatchInfoType_RECORD             BreachWatchInfoType = 0 // note: this also is used for master password where the recordUid is blank
	BreachWatchInfoType_ALTERNATE_PASSWORD BreachWatchInfoType = 1 // for any user_auth passwords, including the passwords used through Pythia
)

// Enum value maps for BreachWatchInfoType.
var (
	BreachWatchInfoType_name = map[int32]string{
		0: "RECORD",
		1: "ALTERNATE_PASSWORD",
	}
	BreachWatchInfoType_value = map[string]int32{
		"RECORD":             0,
		"ALTERNATE_PASSWORD": 1,
	}
)

func (x BreachWatchInfoType) Enum() *BreachWatchInfoType {
	p := new(BreachWatchInfoType)
	*p = x
	return p
}

func (x BreachWatchInfoType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BreachWatchInfoType) Descriptor() protoreflect.EnumDescriptor {
	return file_breachwatch_proto_enumTypes[0].Descriptor()
}

func (BreachWatchInfoType) Type() protoreflect.EnumType {
	return &file_breachwatch_proto_enumTypes[0]
}

func (x BreachWatchInfoType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BreachWatchInfoType.Descriptor instead.
func (BreachWatchInfoType) EnumDescriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{0}
}

type BreachWatchRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordUid            []byte              `protobuf:"bytes,1,opt,name=recordUid,proto3" json:"recordUid,omitempty"`
	EncryptedData        []byte              `protobuf:"bytes,2,opt,name=encryptedData,proto3" json:"encryptedData,omitempty"`
	BreachWatchInfoType  BreachWatchInfoType `protobuf:"varint,3,opt,name=breachWatchInfoType,proto3,enum=BreachWatch.BreachWatchInfoType" json:"breachWatchInfoType,omitempty"`
	UpdateUserWhoScanned bool                `protobuf:"varint,4,opt,name=updateUserWhoScanned,proto3" json:"updateUserWhoScanned,omitempty"`
}

func (x *BreachWatchRecordRequest) Reset() {
	*x = BreachWatchRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreachWatchRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreachWatchRecordRequest) ProtoMessage() {}

func (x *BreachWatchRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreachWatchRecordRequest.ProtoReflect.Descriptor instead.
func (*BreachWatchRecordRequest) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{0}
}

func (x *BreachWatchRecordRequest) GetRecordUid() []byte {
	if x != nil {
		return x.RecordUid
	}
	return nil
}

func (x *BreachWatchRecordRequest) GetEncryptedData() []byte {
	if x != nil {
		return x.EncryptedData
	}
	return nil
}

func (x *BreachWatchRecordRequest) GetBreachWatchInfoType() BreachWatchInfoType {
	if x != nil {
		return x.BreachWatchInfoType
	}
	return BreachWatchInfoType_RECORD
}

func (x *BreachWatchRecordRequest) GetUpdateUserWhoScanned() bool {
	if x != nil {
		return x.UpdateUserWhoScanned
	}
	return false
}

type BreachWatchUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BreachWatchRecordRequest []*BreachWatchRecordRequest `protobuf:"bytes,1,rep,name=breachWatchRecordRequest,proto3" json:"breachWatchRecordRequest,omitempty"`
	EncryptedData            []byte                      `protobuf:"bytes,2,opt,name=encryptedData,proto3" json:"encryptedData,omitempty"`
}

func (x *BreachWatchUpdateRequest) Reset() {
	*x = BreachWatchUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreachWatchUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreachWatchUpdateRequest) ProtoMessage() {}

func (x *BreachWatchUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreachWatchUpdateRequest.ProtoReflect.Descriptor instead.
func (*BreachWatchUpdateRequest) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{1}
}

func (x *BreachWatchUpdateRequest) GetBreachWatchRecordRequest() []*BreachWatchRecordRequest {
	if x != nil {
		return x.BreachWatchRecordRequest
	}
	return nil
}

func (x *BreachWatchUpdateRequest) GetEncryptedData() []byte {
	if x != nil {
		return x.EncryptedData
	}
	return nil
}

type BreachWatchRecordStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordUid []byte `protobuf:"bytes,1,opt,name=recordUid,proto3" json:"recordUid,omitempty"`
	Status    string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Reason    string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *BreachWatchRecordStatus) Reset() {
	*x = BreachWatchRecordStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreachWatchRecordStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreachWatchRecordStatus) ProtoMessage() {}

func (x *BreachWatchRecordStatus) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreachWatchRecordStatus.ProtoReflect.Descriptor instead.
func (*BreachWatchRecordStatus) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{2}
}

func (x *BreachWatchRecordStatus) GetRecordUid() []byte {
	if x != nil {
		return x.RecordUid
	}
	return nil
}

func (x *BreachWatchRecordStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *BreachWatchRecordStatus) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type BreachWatchUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BreachWatchRecordStatus []*BreachWatchRecordStatus `protobuf:"bytes,1,rep,name=breachWatchRecordStatus,proto3" json:"breachWatchRecordStatus,omitempty"`
}

func (x *BreachWatchUpdateResponse) Reset() {
	*x = BreachWatchUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreachWatchUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreachWatchUpdateResponse) ProtoMessage() {}

func (x *BreachWatchUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreachWatchUpdateResponse.ProtoReflect.Descriptor instead.
func (*BreachWatchUpdateResponse) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{3}
}

func (x *BreachWatchUpdateResponse) GetBreachWatchRecordStatus() []*BreachWatchRecordStatus {
	if x != nil {
		return x.BreachWatchRecordStatus
	}
	return nil
}

type BreachWatchTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BreachWatchToken []byte `protobuf:"bytes,1,opt,name=breachWatchToken,proto3" json:"breachWatchToken,omitempty"`
}

func (x *BreachWatchTokenRequest) Reset() {
	*x = BreachWatchTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreachWatchTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreachWatchTokenRequest) ProtoMessage() {}

func (x *BreachWatchTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreachWatchTokenRequest.ProtoReflect.Descriptor instead.
func (*BreachWatchTokenRequest) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{4}
}

func (x *BreachWatchTokenRequest) GetBreachWatchToken() []byte {
	if x != nil {
		return x.BreachWatchToken
	}
	return nil
}

type BreachWatchTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BreachWatchToken []byte `protobuf:"bytes,1,opt,name=breachWatchToken,proto3" json:"breachWatchToken,omitempty"`
	ClientEncrypted  bool   `protobuf:"varint,2,opt,name=clientEncrypted,proto3" json:"clientEncrypted,omitempty"`
}

func (x *BreachWatchTokenResponse) Reset() {
	*x = BreachWatchTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreachWatchTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreachWatchTokenResponse) ProtoMessage() {}

func (x *BreachWatchTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreachWatchTokenResponse.ProtoReflect.Descriptor instead.
func (*BreachWatchTokenResponse) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{5}
}

func (x *BreachWatchTokenResponse) GetBreachWatchToken() []byte {
	if x != nil {
		return x.BreachWatchToken
	}
	return nil
}

func (x *BreachWatchTokenResponse) GetClientEncrypted() bool {
	if x != nil {
		return x.ClientEncrypted
	}
	return false
}

type AnonymizedTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DomainToken   []byte `protobuf:"bytes,1,opt,name=domainToken,proto3" json:"domainToken,omitempty"`
	EmailToken    []byte `protobuf:"bytes,2,opt,name=emailToken,proto3" json:"emailToken,omitempty"`
	PasswordToken []byte `protobuf:"bytes,3,opt,name=passwordToken,proto3" json:"passwordToken,omitempty"`
}

func (x *AnonymizedTokenResponse) Reset() {
	*x = AnonymizedTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnonymizedTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnonymizedTokenResponse) ProtoMessage() {}

func (x *AnonymizedTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnonymizedTokenResponse.ProtoReflect.Descriptor instead.
func (*AnonymizedTokenResponse) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{6}
}

func (x *AnonymizedTokenResponse) GetDomainToken() []byte {
	if x != nil {
		return x.DomainToken
	}
	return nil
}

func (x *AnonymizedTokenResponse) GetEmailToken() []byte {
	if x != nil {
		return x.EmailToken
	}
	return nil
}

func (x *AnonymizedTokenResponse) GetPasswordToken() []byte {
	if x != nil {
		return x.PasswordToken
	}
	return nil
}

type HashCheck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash1 []byte `protobuf:"bytes,1,opt,name=hash1,proto3" json:"hash1,omitempty"` // if supplied, check this hash
	Euid  []byte `protobuf:"bytes,2,opt,name=euid,proto3" json:"euid,omitempty"`   // if supplied, check this euid - if hash is also supplied, update the hash for this euid
}

func (x *HashCheck) Reset() {
	*x = HashCheck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashCheck) ProtoMessage() {}

func (x *HashCheck) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashCheck.ProtoReflect.Descriptor instead.
func (*HashCheck) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{7}
}

func (x *HashCheck) GetHash1() []byte {
	if x != nil {
		return x.Hash1
	}
	return nil
}

func (x *HashCheck) GetEuid() []byte {
	if x != nil {
		return x.Euid
	}
	return nil
}

type BreachWatchStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnonymizedToken []byte       `protobuf:"bytes,1,opt,name=anonymizedToken,proto3" json:"anonymizedToken,omitempty"`
	HashCheck       []*HashCheck `protobuf:"bytes,2,rep,name=hashCheck,proto3" json:"hashCheck,omitempty"`
	RemovedEuid     [][]byte     `protobuf:"bytes,3,rep,name=removedEuid,proto3" json:"removedEuid,omitempty"`
}

func (x *BreachWatchStatusRequest) Reset() {
	*x = BreachWatchStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreachWatchStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreachWatchStatusRequest) ProtoMessage() {}

func (x *BreachWatchStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreachWatchStatusRequest.ProtoReflect.Descriptor instead.
func (*BreachWatchStatusRequest) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{8}
}

func (x *BreachWatchStatusRequest) GetAnonymizedToken() []byte {
	if x != nil {
		return x.AnonymizedToken
	}
	return nil
}

func (x *BreachWatchStatusRequest) GetHashCheck() []*HashCheck {
	if x != nil {
		return x.HashCheck
	}
	return nil
}

func (x *BreachWatchStatusRequest) GetRemovedEuid() [][]byte {
	if x != nil {
		return x.RemovedEuid
	}
	return nil
}

type HashStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash1          []byte `protobuf:"bytes,1,opt,name=hash1,proto3" json:"hash1,omitempty"` // if supplied a uid is supplied for this hash
	Euid           []byte `protobuf:"bytes,2,opt,name=euid,proto3" json:"euid,omitempty"`   // if not supplied, this hash is not being tracked
	BreachDetected bool   `protobuf:"varint,3,opt,name=breachDetected,proto3" json:"breachDetected,omitempty"`
}

func (x *HashStatus) Reset() {
	*x = HashStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HashStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HashStatus) ProtoMessage() {}

func (x *HashStatus) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HashStatus.ProtoReflect.Descriptor instead.
func (*HashStatus) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{9}
}

func (x *HashStatus) GetHash1() []byte {
	if x != nil {
		return x.Hash1
	}
	return nil
}

func (x *HashStatus) GetEuid() []byte {
	if x != nil {
		return x.Euid
	}
	return nil
}

func (x *HashStatus) GetBreachDetected() bool {
	if x != nil {
		return x.BreachDetected
	}
	return false
}

type BreachWatchStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashStatus []*HashStatus `protobuf:"bytes,2,rep,name=hashStatus,proto3" json:"hashStatus,omitempty"`
}

func (x *BreachWatchStatusResponse) Reset() {
	*x = BreachWatchStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreachWatchStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreachWatchStatusResponse) ProtoMessage() {}

func (x *BreachWatchStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreachWatchStatusResponse.ProtoReflect.Descriptor instead.
func (*BreachWatchStatusResponse) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{10}
}

func (x *BreachWatchStatusResponse) GetHashStatus() []*HashStatus {
	if x != nil {
		return x.HashStatus
	}
	return nil
}

type EnterprisePublicKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnterprisePublicKey    []byte `protobuf:"bytes,1,opt,name=enterprisePublicKey,proto3" json:"enterprisePublicKey,omitempty"`
	EnterpriseECCPublicKey []byte `protobuf:"bytes,2,opt,name=enterpriseECCPublicKey,proto3" json:"enterpriseECCPublicKey,omitempty"`
}

func (x *EnterprisePublicKeyResponse) Reset() {
	*x = EnterprisePublicKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterprisePublicKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterprisePublicKeyResponse) ProtoMessage() {}

func (x *EnterprisePublicKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterprisePublicKeyResponse.ProtoReflect.Descriptor instead.
func (*EnterprisePublicKeyResponse) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{11}
}

func (x *EnterprisePublicKeyResponse) GetEnterprisePublicKey() []byte {
	if x != nil {
		return x.EnterprisePublicKey
	}
	return nil
}

func (x *EnterprisePublicKeyResponse) GetEnterpriseECCPublicKey() []byte {
	if x != nil {
		return x.EnterpriseECCPublicKey
	}
	return nil
}

type FreeScanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashedEmail []byte `protobuf:"bytes,1,opt,name=hashedEmail,proto3" json:"hashedEmail,omitempty"`
}

func (x *FreeScanRequest) Reset() {
	*x = FreeScanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreeScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeScanRequest) ProtoMessage() {}

func (x *FreeScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeScanRequest.ProtoReflect.Descriptor instead.
func (*FreeScanRequest) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{12}
}

func (x *FreeScanRequest) GetHashedEmail() []byte {
	if x != nil {
		return x.HashedEmail
	}
	return nil
}

type FreeScanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailBreaches    int32 `protobuf:"varint,1,opt,name=emailBreaches,proto3" json:"emailBreaches,omitempty"`
	PasswordBreaches int32 `protobuf:"varint,2,opt,name=passwordBreaches,proto3" json:"passwordBreaches,omitempty"`
}

func (x *FreeScanResponse) Reset() {
	*x = FreeScanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreeScanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreeScanResponse) ProtoMessage() {}

func (x *FreeScanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreeScanResponse.ProtoReflect.Descriptor instead.
func (*FreeScanResponse) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{13}
}

func (x *FreeScanResponse) GetEmailBreaches() int32 {
	if x != nil {
		return x.EmailBreaches
	}
	return 0
}

func (x *FreeScanResponse) GetPasswordBreaches() int32 {
	if x != nil {
		return x.PasswordBreaches
	}
	return 0
}

type PaidUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *PaidUserRequest) Reset() {
	*x = PaidUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaidUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaidUserRequest) ProtoMessage() {}

func (x *PaidUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaidUserRequest.ProtoReflect.Descriptor instead.
func (*PaidUserRequest) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{14}
}

func (x *PaidUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type PaidUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PaidUser bool `protobuf:"varint,1,opt,name=paidUser,proto3" json:"paidUser,omitempty"`
}

func (x *PaidUserResponse) Reset() {
	*x = PaidUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaidUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaidUserResponse) ProtoMessage() {}

func (x *PaidUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaidUserResponse.ProtoReflect.Descriptor instead.
func (*PaidUserResponse) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{15}
}

func (x *PaidUserResponse) GetPaidUser() bool {
	if x != nil {
		return x.PaidUser
	}
	return false
}

type DetailedScanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *DetailedScanRequest) Reset() {
	*x = DetailedScanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailedScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailedScanRequest) ProtoMessage() {}

func (x *DetailedScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailedScanRequest.ProtoReflect.Descriptor instead.
func (*DetailedScanRequest) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{16}
}

func (x *DetailedScanRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type UseOneTimeTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token []byte `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UseOneTimeTokenRequest) Reset() {
	*x = UseOneTimeTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseOneTimeTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseOneTimeTokenRequest) ProtoMessage() {}

func (x *UseOneTimeTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseOneTimeTokenRequest.ProtoReflect.Descriptor instead.
func (*UseOneTimeTokenRequest) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{17}
}

func (x *UseOneTimeTokenRequest) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type BreachEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Site             string `protobuf:"bytes,1,opt,name=site,proto3" json:"site,omitempty"`
	Email            string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	PasswordInBreach bool   `protobuf:"varint,3,opt,name=passwordInBreach,proto3" json:"passwordInBreach,omitempty"`
	Date             string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	Description      string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *BreachEvent) Reset() {
	*x = BreachEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BreachEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BreachEvent) ProtoMessage() {}

func (x *BreachEvent) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BreachEvent.ProtoReflect.Descriptor instead.
func (*BreachEvent) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{18}
}

func (x *BreachEvent) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *BreachEvent) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *BreachEvent) GetPasswordInBreach() bool {
	if x != nil {
		return x.PasswordInBreach
	}
	return false
}

func (x *BreachEvent) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *BreachEvent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type UseOneTimeTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EmailBreaches    int32          `protobuf:"varint,1,opt,name=emailBreaches,proto3" json:"emailBreaches,omitempty"`
	PasswordBreaches int32          `protobuf:"varint,2,opt,name=passwordBreaches,proto3" json:"passwordBreaches,omitempty"`
	BreachEvents     []*BreachEvent `protobuf:"bytes,3,rep,name=breachEvents,proto3" json:"breachEvents,omitempty"`
	Email            string         `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *UseOneTimeTokenResponse) Reset() {
	*x = UseOneTimeTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseOneTimeTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseOneTimeTokenResponse) ProtoMessage() {}

func (x *UseOneTimeTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseOneTimeTokenResponse.ProtoReflect.Descriptor instead.
func (*UseOneTimeTokenResponse) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{19}
}

func (x *UseOneTimeTokenResponse) GetEmailBreaches() int32 {
	if x != nil {
		return x.EmailBreaches
	}
	return 0
}

func (x *UseOneTimeTokenResponse) GetPasswordBreaches() int32 {
	if x != nil {
		return x.PasswordBreaches
	}
	return 0
}

func (x *UseOneTimeTokenResponse) GetBreachEvents() []*BreachEvent {
	if x != nil {
		return x.BreachEvents
	}
	return nil
}

func (x *UseOneTimeTokenResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type OneTimeUseToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Pad   string `protobuf:"bytes,2,opt,name=pad,proto3" json:"pad,omitempty"`
}

func (x *OneTimeUseToken) Reset() {
	*x = OneTimeUseToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneTimeUseToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneTimeUseToken) ProtoMessage() {}

func (x *OneTimeUseToken) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneTimeUseToken.ProtoReflect.Descriptor instead.
func (*OneTimeUseToken) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{20}
}

func (x *OneTimeUseToken) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *OneTimeUseToken) GetPad() string {
	if x != nil {
		return x.Pad
	}
	return ""
}

type FreePasswordScanRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HashedPassword []byte `protobuf:"bytes,1,opt,name=hashedPassword,proto3" json:"hashedPassword,omitempty"`
}

func (x *FreePasswordScanRequest) Reset() {
	*x = FreePasswordScanRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreePasswordScanRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreePasswordScanRequest) ProtoMessage() {}

func (x *FreePasswordScanRequest) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreePasswordScanRequest.ProtoReflect.Descriptor instead.
func (*FreePasswordScanRequest) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{21}
}

func (x *FreePasswordScanRequest) GetHashedPassword() []byte {
	if x != nil {
		return x.HashedPassword
	}
	return nil
}

type FreePasswordScanResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PasswordBreaches int64 `protobuf:"varint,1,opt,name=passwordBreaches,proto3" json:"passwordBreaches,omitempty"`
}

func (x *FreePasswordScanResponse) Reset() {
	*x = FreePasswordScanResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_breachwatch_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FreePasswordScanResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FreePasswordScanResponse) ProtoMessage() {}

func (x *FreePasswordScanResponse) ProtoReflect() protoreflect.Message {
	mi := &file_breachwatch_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FreePasswordScanResponse.ProtoReflect.Descriptor instead.
func (*FreePasswordScanResponse) Descriptor() ([]byte, []int) {
	return file_breachwatch_proto_rawDescGZIP(), []int{22}
}

func (x *FreePasswordScanResponse) GetPasswordBreaches() int64 {
	if x != nil {
		return x.PasswordBreaches
	}
	return 0
}

var File_breachwatch_proto protoreflect.FileDescriptor

var file_breachwatch_proto_rawDesc = []byte{
	0x0a, 0x11, 0x62, 0x72, 0x65, 0x61, 0x63, 0x68, 0x77, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x22, 0xe6, 0x01, 0x0a, 0x18, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x65,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x52, 0x0a, 0x13, 0x62, 0x72, 0x65, 0x61, 0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x42, 0x72, 0x65,
	0x61, 0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x13, 0x62, 0x72, 0x65, 0x61, 0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66,
	0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x57, 0x68, 0x6f, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x57,
	0x68, 0x6f, 0x53, 0x63, 0x61, 0x6e, 0x6e, 0x65, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x18, 0x42, 0x72,
	0x65, 0x61, 0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x61, 0x0a, 0x18, 0x62, 0x72, 0x65, 0x61, 0x63, 0x68,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x63,
	0x68, 0x57, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52,
	0x18, 0x62, 0x72, 0x65, 0x61, 0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x67, 0x0a, 0x17, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x7b, 0x0a, 0x19, 0x42, 0x72, 0x65, 0x61,
	0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x17, 0x62, 0x72, 0x65, 0x61, 0x63, 0x68, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x17, 0x62, 0x72,
	0x65, 0x61, 0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x45, 0x0a, 0x17, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x10, 0x62, 0x72, 0x65, 0x61, 0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x62, 0x72, 0x65, 0x61,
	0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x70, 0x0a, 0x18,
	0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x72, 0x65, 0x61,
	0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x10, 0x62, 0x72, 0x65, 0x61, 0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x22, 0x81,
	0x01, 0x0a, 0x17, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0d, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x35, 0x0a, 0x09, 0x48, 0x61, 0x73, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x68, 0x61, 0x73, 0x68, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x68, 0x61, 0x73, 0x68, 0x31, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x65, 0x75, 0x69, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x18, 0x42, 0x72,
	0x65, 0x61, 0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d,
	0x69, 0x7a, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x34, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x09, 0x68, 0x61, 0x73,
	0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x64, 0x45, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x45, 0x75, 0x69, 0x64, 0x22, 0x5e, 0x0a, 0x0a, 0x48, 0x61, 0x73, 0x68,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x61, 0x73, 0x68, 0x31, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x68, 0x61, 0x73, 0x68, 0x31, 0x12, 0x12, 0x0a, 0x04,
	0x65, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x65, 0x75, 0x69, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x62, 0x72, 0x65, 0x61, 0x63, 0x68, 0x44, 0x65, 0x74, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x62, 0x72, 0x65, 0x61, 0x63, 0x68,
	0x44, 0x65, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x54, 0x0a, 0x19, 0x42, 0x72, 0x65, 0x61,
	0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x68, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x42, 0x72, 0x65, 0x61,
	0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x87,
	0x01, 0x0a, 0x1b, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x13, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x36, 0x0a, 0x16, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x45, 0x43,
	0x43, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x16, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x45, 0x43, 0x43, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22, 0x33, 0x0a, 0x0f, 0x46, 0x72, 0x65, 0x65,
	0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x68,
	0x61, 0x73, 0x68, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x64, 0x0a,
	0x10, 0x46, 0x72, 0x65, 0x65, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42,
	0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x72, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x73, 0x22, 0x27, 0x0a, 0x0f, 0x50, 0x61, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x2e, 0x0a, 0x10,
	0x50, 0x61, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x70, 0x61, 0x69, 0x64, 0x55, 0x73, 0x65, 0x72, 0x22, 0x2b, 0x0a, 0x13,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x2e, 0x0a, 0x16, 0x55, 0x73, 0x65,
	0x4f, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x99, 0x01, 0x0a, 0x0b, 0x42, 0x72,
	0x65, 0x61, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x49,
	0x6e, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xbf, 0x01, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x4f, 0x6e, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42,
	0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x10, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x72, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x0c, 0x62, 0x72, 0x65, 0x61, 0x63, 0x68, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x42, 0x72, 0x65, 0x61,
	0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68, 0x2e, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x0c, 0x62, 0x72, 0x65, 0x61, 0x63, 0x68, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x39, 0x0a, 0x0f, 0x4f, 0x6e, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x55, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x70,
	0x61, 0x64, 0x22, 0x41, 0x0a, 0x17, 0x46, 0x72, 0x65, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x46, 0x0a, 0x18, 0x46, 0x72, 0x65, 0x65, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x53, 0x63, 0x61, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x72, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x73, 0x2a, 0x39, 0x0a,
	0x13, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x57, 0x61, 0x74, 0x63, 0x68, 0x49, 0x6e, 0x66, 0x6f,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x10, 0x00,
	0x12, 0x16, 0x0a, 0x12, 0x41, 0x4c, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x41,
	0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x01, 0x42, 0x27, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x2e,
	0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x0b, 0x42, 0x72, 0x65, 0x61, 0x63, 0x68, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_breachwatch_proto_rawDescOnce sync.Once
	file_breachwatch_proto_rawDescData = file_breachwatch_proto_rawDesc
)

func file_breachwatch_proto_rawDescGZIP() []byte {
	file_breachwatch_proto_rawDescOnce.Do(func() {
		file_breachwatch_proto_rawDescData = protoimpl.X.CompressGZIP(file_breachwatch_proto_rawDescData)
	})
	return file_breachwatch_proto_rawDescData
}

var file_breachwatch_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_breachwatch_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_breachwatch_proto_goTypes = []interface{}{
	(BreachWatchInfoType)(0),            // 0: BreachWatch.BreachWatchInfoType
	(*BreachWatchRecordRequest)(nil),    // 1: BreachWatch.BreachWatchRecordRequest
	(*BreachWatchUpdateRequest)(nil),    // 2: BreachWatch.BreachWatchUpdateRequest
	(*BreachWatchRecordStatus)(nil),     // 3: BreachWatch.BreachWatchRecordStatus
	(*BreachWatchUpdateResponse)(nil),   // 4: BreachWatch.BreachWatchUpdateResponse
	(*BreachWatchTokenRequest)(nil),     // 5: BreachWatch.BreachWatchTokenRequest
	(*BreachWatchTokenResponse)(nil),    // 6: BreachWatch.BreachWatchTokenResponse
	(*AnonymizedTokenResponse)(nil),     // 7: BreachWatch.AnonymizedTokenResponse
	(*HashCheck)(nil),                   // 8: BreachWatch.HashCheck
	(*BreachWatchStatusRequest)(nil),    // 9: BreachWatch.BreachWatchStatusRequest
	(*HashStatus)(nil),                  // 10: BreachWatch.HashStatus
	(*BreachWatchStatusResponse)(nil),   // 11: BreachWatch.BreachWatchStatusResponse
	(*EnterprisePublicKeyResponse)(nil), // 12: BreachWatch.EnterprisePublicKeyResponse
	(*FreeScanRequest)(nil),             // 13: BreachWatch.FreeScanRequest
	(*FreeScanResponse)(nil),            // 14: BreachWatch.FreeScanResponse
	(*PaidUserRequest)(nil),             // 15: BreachWatch.PaidUserRequest
	(*PaidUserResponse)(nil),            // 16: BreachWatch.PaidUserResponse
	(*DetailedScanRequest)(nil),         // 17: BreachWatch.DetailedScanRequest
	(*UseOneTimeTokenRequest)(nil),      // 18: BreachWatch.UseOneTimeTokenRequest
	(*BreachEvent)(nil),                 // 19: BreachWatch.BreachEvent
	(*UseOneTimeTokenResponse)(nil),     // 20: BreachWatch.UseOneTimeTokenResponse
	(*OneTimeUseToken)(nil),             // 21: BreachWatch.OneTimeUseToken
	(*FreePasswordScanRequest)(nil),     // 22: BreachWatch.FreePasswordScanRequest
	(*FreePasswordScanResponse)(nil),    // 23: BreachWatch.FreePasswordScanResponse
}
var file_breachwatch_proto_depIdxs = []int32{
	0,  // 0: BreachWatch.BreachWatchRecordRequest.breachWatchInfoType:type_name -> BreachWatch.BreachWatchInfoType
	1,  // 1: BreachWatch.BreachWatchUpdateRequest.breachWatchRecordRequest:type_name -> BreachWatch.BreachWatchRecordRequest
	3,  // 2: BreachWatch.BreachWatchUpdateResponse.breachWatchRecordStatus:type_name -> BreachWatch.BreachWatchRecordStatus
	8,  // 3: BreachWatch.BreachWatchStatusRequest.hashCheck:type_name -> BreachWatch.HashCheck
	10, // 4: BreachWatch.BreachWatchStatusResponse.hashStatus:type_name -> BreachWatch.HashStatus
	19, // 5: BreachWatch.UseOneTimeTokenResponse.breachEvents:type_name -> BreachWatch.BreachEvent
	6,  // [6:6] is the sub-list for method output_type
	6,  // [6:6] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_breachwatch_proto_init() }
func file_breachwatch_proto_init() {
	if File_breachwatch_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_breachwatch_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreachWatchRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreachWatchUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreachWatchRecordStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreachWatchUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreachWatchTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreachWatchTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnonymizedTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashCheck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreachWatchStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HashStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreachWatchStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterprisePublicKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreeScanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreeScanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaidUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaidUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailedScanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseOneTimeTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BreachEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseOneTimeTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OneTimeUseToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreePasswordScanRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_breachwatch_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FreePasswordScanResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_breachwatch_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_breachwatch_proto_goTypes,
		DependencyIndexes: file_breachwatch_proto_depIdxs,
		EnumInfos:         file_breachwatch_proto_enumTypes,
		MessageInfos:      file_breachwatch_proto_msgTypes,
	}.Build()
	File_breachwatch_proto = out.File
	file_breachwatch_proto_rawDesc = nil
	file_breachwatch_proto_goTypes = nil
	file_breachwatch_proto_depIdxs = nil
}
